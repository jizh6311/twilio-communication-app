FROM python:3.7
RUN apt update && apt upgrade -y

ENV APP /servers
RUN mkdir $APP
WORKDIR $APP

RUN apt install make curl -y
RUN pip install --upgrade pip

# get and install poetry package manager
RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
ENV PATH /root/.poetry/bin:$PATH
# set poetry so it does not use a virtual environment in deployment container
RUN poetry config virtualenvs.create false

ENV PYTHONPATH $APP
COPY ./pyproject.toml ./poetry.lock $APP/
COPY ./dependencies/amp_tools-0.3.4-py3-none-any.whl $APP/dependencies/amp_tools-0.3.4-py3-none-any.whl
RUN poetry install --no-dev

COPY ./amp_simulated_servers/* $APP/
COPY ./configs/* $APP/

ENV prometheus_multiproc_dir /prometheus_multiproc_dir
RUN mkdir $prometheus_multiproc_dir

#ENTRYPOINT ["poetry", "run", "uwsgi", "--ini", "flask_server.ini" ]

# Set an env variable from the build arg that is substituted at runtime
ARG LAUNCHER_INI
ENV ENV_LAUNCHER_INI=$LAUNCHER_INI
RUN echo ${ENV_LAUNCHER_INI}

ENTRYPOINT poetry run uwsgi --ini ${ENV_LAUNCHER_INI}
