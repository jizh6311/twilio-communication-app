version: '3'

services:
  redis-server:
    image: 'redis:5.0-alpine'
    command: redis-server --requirepass devpassword
    volumes:
      - 'redis_data:/data'
    ports:
      - '6379:6379'
    networks:
      main_network:
        aliases:
          - redis-server

  flask-servers:
    image: flask-servers
    build:
      context: ./amp_simulated_servers
      dockerfile: Dockerfile-servers
    expose:
      - 7599
    volumes:
      - "./amp_simulated_servers/servers:/servers"
    networks:
      main_network:
        aliases:
          - flask-servers

  python-model:
    image: python-model
    build:
      context: ./amp_model
      dockerfile: Dockerfile-model
#    expose:
#      - 7699
    volumes:
      - "./amp_model/models:/models"
    networks:
      main_network:
        aliases:
          - python-model

  flask-model:
    image: flask-model
    build:
      context: ./amp_model_api
      dockerfile: Dockerfile-model-api
    expose:
      - 7699
    volumes:
      - "./amp_model_api/api:/api"
    networks:
      main_network:
        aliases:
          - flask-model

  nginx:
    image: webapp-nginx
    build:
      context: ./amp_model_api
      dockerfile: Dockerfile-nginx
    expose:
      - 5000
      - 9545
    ports:
      - 5000:5000
      - 9545:9545
    depends_on:
      - flask-servers
      - flask-model
    networks:
      main_network:
        aliases:
          - nginx

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./amp_model_api/config/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      main_network:
        aliases:
          - prometheus

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=foobar
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      main_network:
        aliases:
          - grafana

volumes:
  prometheus_data: {}
  grafana_data: {}
  redis_data: {}

networks:
  main_network:
