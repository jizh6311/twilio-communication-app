FROM python:3.7

ENV APP /models
RUN mkdir $APP
WORKDIR $APP

ENV prometheus_multiproc_dir /prometheus_multiproc_dir
RUN mkdir $prometheus_multiproc_dir

# Python dependencies
COPY requirements.txt .
COPY ./dependencies/amp_tools-0.3.0.tar.gz .
RUN pip install amp_tools-0.3.0.tar.gz
RUN pip install -r requirements.txt

# Copy the rest of the codebase into the image
COPY . .

CMD ["python", "model.py"]




# FROM python:3.7.5-slim-buster as base
# WORKDIR /app
# RUN apt update && apt upgrade -y
# # make utilities; curl to get poetry; git for versioning using pbr
# RUN apt install make curl git -y
# # upgrade pip to latest
# RUN pip install --upgrade pip
# # get and install poetry package manager
# RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
# ENV PATH /root/.poetry/bin:$PATH
# ENV PYTHONPATH /app
# # set poetry to no use a virtual environment in deployment container
# RUN poetry config virtualenvs.create false
# COPY ./pyproject.toml ./poetry.lock /app/
#
# ####### tester tester tester
# FROM base as tester
# RUN poetry install
# COPY . /app
# RUN make generate
# RUN make test
#
# ####### builder builder builder
# FROM tester as builder
# RUN make package-wheel
#
# ####### deploy deploy deploy
# FROM base as deploy
# RUN poetry install --no-dev
# COPY --from=builder /app/dist/*.whl /app/
# RUN poetry run pip install *.whl
# ENTRYPOINT ["poetry", "run", "main.py"]
